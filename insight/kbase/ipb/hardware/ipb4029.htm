<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">

<style type="text/css"><!--
	body { font-family: Arial, Helvetica, sans-serif; }

//-->
</style>
<meta name="generator" content="Microsoft FrontPage 3.0">
<title>Hardware I.P.B. 4029</title>
</head>

<body background="../../../images/mits-bg5.gif" bgcolor="#ffffff" link="#d60029"
alink="#d60029" vlink="#800080" leftmargin="0" marginwidth="0" marginheight="6">
<!-- Header - start of top table -->
<table border="0" cellpadding="0" cellspacing="0" width="98%">
<!-- The top table has the Mitsubishi logo and Home button -->
  <tr>
    <td valign="top"><img src="../../../images/m-logo-s.gif" width="193" height="70" alt="Mitsubishi Electric - Computing for a Connected World"></td>
        <td valign="bottom" align="right"><a href="../../../default.htm"><img width="41" height="32" src="../../../images/bt-home.gif" alt="Insight CD Home Page" border="0"></a></td>
  </tr>
  <tr>
    <td width="98%" colspan="2" bgcolor="#000000"><img width="1" height="1" src="../../../images/space.gif"><br>
    </td>
  </tr>
</table>
<!-- end of top table -->


<table border="0" cellpadding="0" cellspacing="0" width="98%">
  <tr>
    <td width="10" bgcolor="#000000"><img width="10" height="10"
    src="../../../images/space.gif"></td>
    <td width="120" valign="top" align="left" bgcolor="#000000"><script LANGUAGE="JavaScript">

<!--

        if (document.images) {

          var product1 = new Image()
          product1.src = "/insight/images/product1.gif"
          var product2 = new Image()
          product2.src = "/insight/images/product2.gif"

          var service1 = new Image()
          service1.src = "/insight/images/service1.gif"
          var service2 = new Image()
          service2.src = "/insight/images/service2.gif"

          var kbase1 = new Image()
          kbase1.src = "/insight/images/kbase1.gif"
          var kbase2 = new Image()
          kbase2.src = "/insight/images/kbase2.gif"       

          var upgrade1 = new Image()
          upgrade1.src = "/insight/images/upgrade1.gif"
          var upgrade2 = new Image()
          upgrade2.src = "/insight/images/upgrade2.gif"       

          var downlo1 = new Image()
          downlo1.src = "/insight/images/downlo1.gif"
          var downlo2 = new Image()
          downlo2.src = "/insight/images/downlo2.gif"       

          var inserv1 = new Image()
          inserv1.src = "/insight/images/inserv1.gif"
          var inserv2 = new Image()
          inserv2.src = "/insight/images/inserv2.gif"       

          var email1 = new Image()
          email1.src = "/insight/images/email1.gif"
          var email2 = new Image()
          email2.src = "/insight/images/email2.gif"       

          var search1 = new Image()
          search1.src = "/insight/images/search1.gif"
          var search2 = new Image()
          search2.src = "/insight/images/search2.gif"       

          var y20001 = new Image()
          y20001.src = "/insight/images/y2001.gif"
          var y20002 = new Image()
          y20002.src = "/insight/images/y2002.gif"

          var osites1 = new Image()
          osites1.src = "/insight/images/osites1.gif"
          var osites2 = new Image()
          osites2.src = "/insight/images/osites2.gif"

          var disclaim1 = new Image()
          disclaim1.src = "/insight/images/disclam1.gif"
          var disclaim2 = new Image()
          disclaim2.src = "/insight/images/disclam2.gif"

        }



        function act(imgName) {
          if (document.images)
            document[imgName].src = eval(imgName + '2.src')
        }



        function inact(imgName) {
          if (document.images)
            document[imgName].src = eval(imgName + '1.src')
        }

        // -->
</script>


    <a HREF="../../../products/main.htm" onMouseOver="act('product')" onMouseOut="inact('product')"><img width="113" height="22" src="../../../images/product1.gif" name="product" alt="Products" border="0"></a><br>

    <a HREF="../../../services/main.htm" onMouseOver="act('service')" onMouseOut="inact('service')"><img width="113" height="22" src="../../../images/service1.gif" name="service" alt="Services" border="0"></a><br>

    <a HREF="../../main.htm"><img width="113" height="22" src="../../../images/kbase2.gif" name="kbase" alt="Knowledgebase" border="0"></a><br>
       <a HREF="../ipbmain.htm"><img width="113" height="17" src="../../../images/s_ipb.gif" alt="Bulletins (IPBs)" border="0"></a><br>
       <a HREF="../../guides/guidecon.htm"><img width="113" height="17" src="../../../images/s_guides.gif" alt="Guides" border="0"></a><br>
       <a HREF="../../faq/main.htm"><img width="113" height="17" src="../../../images/s_faq.gif" alt="FAQs" border="0"></a><br>
       <a HREF="../../guides/manuals/menu.htm"><img width="113" height="17" src="../../../images/s_manual.gif" alt="Owner's Handbooks" border="0"></a><br>
       <a HREF="../../../common/infact/menu.htm"><img width="113" height="17" src="../../../images/s_datash.gif" alt="Product Datasheets" border="0"></a><br>
       <a HREF="../../../common/misc/menu.htm"><img width="113" height="17" src="../../../images/s_misc.gif" alt="Miscellaneous Items" border="0"></a><br>

    <a HREF="../../../upgrades/main.htm" onMouseOver="act('upgrade')" onMouseOut="inact('upgrade')"><img width="113" height="22" src="../../../images/upgrade1.gif" name="upgrade" alt="Upgrades" border="0"></a><br>

    <a HREF="../../../download/main.htm" onMouseOver="act('downlo')" onMouseOut="inact('downlo')"><img width="113" height="22" src="../../../images/downlo1.gif" name="downlo" alt="Downloads" border="0"></a><br>

    <a HREF="../../../insindex.exe" onMouseOver="act('search')" onMouseOut="inact('search')"><img width="113" height="22" src="../../../images/search1.gif" name="search" alt="Search Insight" border="0"></a><br>
    <a HREF="mailto:insight@mitsubishi-computers.com" onMouseOver="act('email')" onMouseOut="inact('email')"><img width="113" height="22" src="../../../images/email1.gif" name="email" alt="E-Mail us" border="0"></a><br>
    <a HREF="http://www.mitsubishi-computers.com/support/service/" onMouseOver="act('inserv')" onMouseOut="inact('inserv')"><img width="113" height="22" src="../../../images/inserv1.gif" name="inserv" alt="Insight Service" border="0"></a><br>

    <a HREF="../../../common/year2000/year2000.htm" onMouseOver="act('y2000')" onMouseOut="inact('y2000')"><img width="113" height="21" src="../../../images/y2001.gif" name="y2000" alt="Year 2000" border="0"></a><br>
    <a HREF="../../../common/oth-site/oth-site.htm" onMouseOver="act('osites')" onMouseOut="inact('osites')"><img width="113" height="38" src="../../../images/osites1.gif" name="osites" alt="Other Mitsubishi Sites" border="0"></a><br>
    <a HREF="../../../common/disclaim.htm" onMouseOver="act('disclaim')" onMouseOut="inact('disclaim')"><img width="113" height="24" src="../../../images/disclam1.gif" name="disclaim" alt="Site Disclaimer" border="0"></a><br>
      
    <img width="113" height="120" src="../../../images/space.gif"><br>
</td>
    <td width="10" valign="top" width="10" height="10" src="/insight/images/space.gif"
    alt="10 pixel Gap" border="0"></td>
    <td valign="top">&nbsp;<table border="0" width="100%" bgcolor="#FFFFC0">
      <tr>
        <td colspan="2"><font face="Arial,Helvetica" size="4" color="#D60029"><strong>Hardware
        I.P.B. 4029 </strong></font></td>
        <td valign="bottom"><font size="2">3rd August 1990 (NT) </font></td>
      </tr>
      <tr>
        <td><strong><font size="2">Department </font></strong></td>
        <td><strong><font size="2">Category </font></strong></td>
        <td><strong><font size="2">Implementation</font></strong></td>
      </tr>
      <tr>
        <td colspan="3" bgcolor="#000000" height="1"></td>
      </tr>
      <tr>
        <td><font size="2">Hardware </font></td>
        <td><font size="2">Hardware </font></td>
        <td><font size="2">Advisory </font></td>
      </tr>
    </table>
    <table border="0" width="100%">
      <tr>
        <td align="center" width="50%"><font size="2"><a href="ipb4028.htm">Previous IPB</a> </font></td>
        <td align="center" width="50%"><font size="2"><a href="ipb4030.htm">Next IPB</a> </font></td>
      </tr>
    </table>
    <table border="0" width="100%">
      <tr>
        <td><p align="center"><font size="3"><b>Quantum ProDrive SCSI</b> </font></p>
        <p><font size="2">The following document should be read in order to understand some issues
        which may arise during formatting and bench marking the Quantum drive as installed in the
        Qi 900. </font></p>
        <p><font size="2">The Quantum ProDrive is a 3.5&quot; form factor SCSI Winchester drive
        that adheres to the ANSI X3T9.2/82.2 Revision 17B SCSI specification at conformance level
        2 with Command Set Revision 4B. It is installed as original equipment in Qi 900 series
        machine. The drive is &quot;hard&quot; sectored to provide physically 512 bytes per sector
        (plus 6 bytes for Error Correcting Code (ECC)) with every 6th track containing a reserved
        sector for defect management. </font></p>
        <h4 align="center"><font size="2">ERROR CORRECTION </font></h4>
        <p><font size="2">Defect Definition (General Note) </font></p>
        <p><font size="2">Any discrepancy between recorded data and recovered data at the sector
        level is a data error. In high density digital recording systems, it is necessary to
        provide an error detection and correction scheme to enhance the operational performance
        and increase the reliability of the system. </font></p>
        <p><font size="2">Data errors can be either &quot;soft&quot; (not readily repeatable) or
        &quot;hard&quot; (repeatable with high probability). Soft errors are generally related to
        the signal-to-noise ratio of the system. They represent marginal conditions of the media,
        heads, read/write circuitry, and the controller data synchronisation circuit. Hard errors
        are most often due to defects, pits, scratches, or thin spots in the media surface. These
        defective media areas can be detected and skipped (not used for storage). </font></p>
        <p><font size="2">Defect Management (General Note) </font></p>
        <p><font size="2">Disk drives are scanned by their manufacturer for defective sectors on
        the disks. Those defective sectors are deallocated prior to shipment. A factory Defect
        Map, duplicated on tracks on the drive, allocated for this purpose, will contain the
        location of all defective sectors found in the drive. </font></p>
        <p><font size="2">One sector is allocated per defect zone as a replacement sector. Defects
        found at the manufacturer are skipped using an &quot;In-Line&quot; sparing method, which
        replaces each sector with the next sector on the track. In the rare instance where more
        than one defect is found within the same zone, the additional defects will be mapped into
        the nearest adjacent zone with a spare sector available. </font></p>
        <p><font size="2">Errors reported during field use (disk or data errors), are detected by
        SCSI aware operating systems (DOS does not fall into this category) and stored in a
        temporary list, these areas are then avoided for data storage. To map these defective
        areas out of normal use a low level format programme will need to be run, to in line
        sector spare the drive. </font></p>
        <p><font size="2">Low Level Format On the Quantum Drive (SFORM) </font></p>
        <p><font size="2">In general, when SFORM is run on a SCSI drive, the manufacturers
        defective media list is read and any defective areas skipped using the &quot;In-Line&quot;
        sparing method detailed above. The drive is then scanned to verify sector headers, and any
        additional defective areas mapped as bad. </font></p>
        <p><font size="2">On the Quantum drives however, The only operation performed is
        &quot;In-Line&quot; sparing after reading the manufacturers defect list. This typically
        only takes a few seconds, and results in the drive appearing to have all its data still
        intact. As no read write test is performed, any additional grown defects will not be
        mapped out. To correct this HDSETUP.EXE is to be amended to include a format unit command
        for Quantum drives which will do a media scan in an attempt to detect grown defects. </font></p>
        <p><font size="2">Quantum ProDrives also have the facility to detect and add grown defects
        to an internal list. This area will then automatically be re-mapped to the first available
        free sector, including data if possible. This operation will not in line sector spare the
        drive but will make grown defects almost transparent to the user. As default this option
        is disabled, but it is intended to enable it during the enhancement of HDSETUP. </font></p>
        <p><font size="2">Quantum's Disk Cache (DisCache) </font></p>
        <p><font size="2">Quantum's Disk Cache anticipates host-system requests for data and
        stores that data for faster access. When the host requests a particular segment of data,
        the caching feature uses a pre-fetch strategy to &quot;look-ahead&quot; and automatically
        store the subsequent data from the disk in RAM. If the host requests this subsequent data,
        the RAM is accessed rather than the disk. </font></p>
        <p><font size="2">Since typically 50% or more of all disk requests are sequential, there
        is a high probability that the subsequent data requested will be in the cache. This cache
        data can be retrieved in microseconds rather than milliseconds. As a result, Quantum's
        Disk Cache can provide substantial time saving during half or more of all disk requests. </font></p>
        <p><font size="2">This drive based cache works by continuing to fill its cache memory with
        adjacent data after transferring data requests to the host. Unlike a non-caching
        controller, Quantum's SCSI disk controller continues a read operation after the requested
        data has been transferred to the host system. This read operation terminates after a
        programmed amount of subsequent data has been read into the cache segment (Maximum
        Pre-fetch). During write operations, this cache employs a write-through design, in which
        data written to the drive is written immediately to the disk. This design ensures data
        integrity in case of power loss. </font></p>
        <p><font size="2">The pre-fetch cache may be configured to offer an optimum performance
        for any given operating environment. However all drives fitted into Qi 900 machines will
        be configured to the default option of 4 segments of 16KB for reading purposes, 1 sector
        minimum pre-fetch after each read command and 16 sector (8KB) maximum pre-fetch after each
        read. This will provide optimum performance over a wide range of operating environments. </font></p>
        <h4 align="center"><font size="2">PERFORMANCE </font></h4>
        <p><font size="2">DOS Bench Mark Testing </font></p>
        <p><font size="2">In light of the operation and configuration of Quantum's cache, as
        mentioned above, the results produced by some industry standard bench mark tests, may not
        reflect an accurate record of the true performance characteristics of this range of drive.
        In short, by re-programming the drive cache significantly different results may be
        obtained from the same bench mark test. </font></p>
        <p><font size="2">The operation of some of the more common bench mark tests is examined
        below. </font></p>
        <p><font size="2">Core Vr 2.8 </font></p>
        <p><font size="2">This test attempts to assess a drives performance by measuring its
        sequential transfer rate as well as its Average and Single track seek timings.
        Unfortunately the Adaptec AHA1640 SCSI Card emulates an INT 13h DOS call by presenting the
        systems BIOS with a drive which appears to have 64 Heads and 32 Sectors per track at 512
        bytes per sector, i.e. the drive always appears to have 1MB Cylinder Capacities. A single
        track seek timing measurement undertaken through Int 13h will therefore end up seeking
        between these imaginary 1MB Cylinders which at best is a 10 track physical seek on this
        Quantum Drive. Such measurements are therefore meaningless. </font></p>
        <p><font size="2">The same argument applies to Average seek timing measurements, although
        because of the Random nature of the seeking, the results are not always totally
        inaccurate. There is though, a bias in favour of higher capacity drives with higher
        cylinder capacities even if the quoted access time for these drives is identical. To
        assess the random performance of SCSI drives in general, under the DOS operating system it
        is best to utilise randomised Int 25h single sector read calls. </font></p>
        <p><font size="2">Power Meter Vr 1.3 </font></p>
        <p><font size="2">Power Meter attempts to emulate a typical DOS user environment under
        various application packages. It effectively assumes that the packages themselves are
        sequentially laid out on the disk as achieved under a normal installation process. For
        this test the Quantum drive would give best performance if its cache is configured to one
        segment of 64KB. </font></p>
        <p align="center"><font size="2">----------oOo---------- </font></td>
      </tr>
    </table>
    <p>&nbsp;</p>
    <p align="center"><img width="486" height="25" src="../../../images/connectd.gif"
    alt="Computing for a Connected World"> </td>
  </tr>
</table>
</body>
</html>
